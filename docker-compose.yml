version: '3'

services:

  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - ./wordpress:/var/www/html
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - wordpress
      - mysql

  mysql:
    image: mariadb:10.6
    container_name: ${APP_NAME}-mysql
    volumes: # data to map to the container
      - wordpress_data:/var/lib/mysql
      #- ./db/db.sql:/docker-entrypoint-initdb.d/db.sql
    restart: unless-stopped
    environment: # mysql options
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ROOT_PASSWORD: wordpress
      MYSQL_RANDOM_ROOT_PASSWORD: 1
    ports:
      - "33060:3306"

  wordpress:
    container_name: ${APP_NAME}-wordpress
    build:
      context: ./.docker/wordpress
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./wordpress:/var/www/html:cached
      - ./.docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DEBUG: 1

    # Point the IP of the Nginx container to the WordPress site URL to make the loopback work
    # https://devops.stackexchange.com/questions/12957/wordpress-site-health-errors-when-using-docker-and-nginx
    # Use the bridge network's IP address instead:
    # 172.17.0.1 -> docker network inspect -v bridge
    extra_hosts:
      - localhost:172.17.0.1
      - host.docker.internal:host-gateway

  phpmyadmin:
    depends_on:
      - mysql
    image: phpmyadmin/phpmyadmin
    container_name: "${APP_NAME}-phpmyadmin"
    restart: unless-stopped
    environment:
      PMA_HOST: mysql:${MYSQL_PORT}
    ports:
      - ${PHPMYADMIN_PORT}:80

  mailcatcher:
    restart: on-failure
    image: sj26/mailcatcher:v0.8.2
    ports:
      - "1081:1080"
      - "1026:1025"

volumes:
  wordpress_data: { } # persist db data in native named volume
